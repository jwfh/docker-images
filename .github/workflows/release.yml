name: Docker Image Release CI

on:
  push:
    branches: [ master ]
  schedule:
    - cron:  '0 0 * * SAT'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
      - name: Build the tagged Docker image
        run: |
          repo_root_dir="$PWD"
          for image_path in $(find . -type d -exec [ -e {}/Dockerfile ] \; -print -prune); do
            image="$(echo $image_path | sed -e 's#^\./##' -e 's#/$##' -e 's#/#-#g')"
            cd "$image_path"
            docker build --tag ${{ secrets.DOCKER_HUB_USERNAME }}/$image:latest .
            version="$(docker inspect ${{ secrets.DOCKER_HUB_USERNAME }}/$image:latest | jq -r .[0].ContainerConfig.Labels.Version)"
            docker tag ${{ secrets.DOCKER_HUB_USERNAME }}/$image:latest ${{ secrets.DOCKER_HUB_USERNAME }}/$image:$version
            cd "$repo_root_dir"
          done
      - name: Push the tagged Docker image
        run: |
          repo_root_dir="$PWD"
          for image_path in $(find . -type d -exec [ -e {}/Dockerfile ] \; -print -prune); do
            image="$(echo $image_path | sed -e 's#^\./##' -e 's#/$##' -e 's#/#-#g')"
            cd "$image_path"
            docker push ${{ secrets.DOCKER_HUB_USERNAME }}/$image:latest
            version="$(docker inspect ${{ secrets.DOCKER_HUB_USERNAME }}/$image:latest | jq -r .[0].ContainerConfig.Labels.Version)"
            docker push ${{ secrets.DOCKER_HUB_USERNAME }}/$image:$version$version$version$version
            cd "$repo_root_dir"
          done
