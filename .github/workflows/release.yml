name: Docker Image Release CI

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
      - name: Get the version
        id: vars
        run: echo ::set-output name=tag::$(echo ${GITHUB_REF:10})
      - name: Build the tagged Docker image
        run: |
          repo_root_dir="$PWD"
          for image_path in $(find . -type d -exec [ -e {}/Dockerfile ] \; -print -prune); do
            image="$(echo $image_path | sed -e 's#^\./##' -e 's#/$##' -e 's#/#-#g')"
            cd "$image_path"
            docker build --tag ${{ secrets.DOCKER_HUB_USERNAME }}/$image:${{ steps.vars.outputs.tag }} ."
            docker tag ${{ secrets.DOCKER_HUB_USERNAME }}/$image:${{ steps.vars.outputs.tag }} ${{ secrets.DOCKER_HUB_USERNAME }}/$image:latest
            cd "$repo_root_dir"
          done
      - name: Push the tagged Docker image
        run: |
          repo_root_dir="$PWD"
          for image_path in $(find . -type d -exec [ -e {}/Dockerfile ] \; -print -prune); do
            image="$(echo $image_path | sed -e 's#^\./##' -e 's#/$##' -e 's#/#-#g')"
            cd "$image_path"
            docker push ${{ secrets.DOCKER_HUB_USERNAME }}/$image:${{ steps.vars.outputs.tag }}"
            docker push ${{ secrets.DOCKER_HUB_USERNAME }}/$image:latest"
            cd "$repo_root_dir"
          done
